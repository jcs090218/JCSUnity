name: Package

on:
  pull_request: {}
  push: { branches: [main, master, develop] }
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # License
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  # Project
  UNITY_VERSION: 6000.0.11f1
  PROJECT_PATH: .
  # Packaging
  PKG_VERSION: 2.4.1
  BUILD_METHOD: jcs090218.PackageExporter.BatchMode.Export

jobs:
  checklicense:
    name: check if UNITY_LICENSE is set in github secrets
    runs-on: ubuntu-latest
    outputs:
      is_unity_license_set: ${{ steps.checklicense_job.outputs.is_unity_license_set }}
    steps:
      - name: Check whether unity activation requests should be done
        id: checklicense_job
        run: |
            echo "Skip activation job: ${{ env.UNITY_LICENSE != '' }}"
            echo "::set-output name=is_unity_license_set::${{ env.UNITY_LICENSE != '' }}"

  package:
    needs: [checklicense]
    if: needs.checklicense.outputs.is_unity_license_set == 'true'
    name: ðŸ“¦ ${{ matrix.package-name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package-name:
          - JCSUnity_ExampleProjects
          - JCSUnity_Release
          - JCSUnity_Trimmed
        targetPlatform:
          - StandaloneWindows64
    steps:
      - uses: actions/checkout@v5
        with:
          lfs: true

      - uses: actions/cache@v4.2.4
        with:
          path: Library
          key: Library-test-project-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-test-project-
            Library-

      - uses: game-ci/unity-builder@main
        with:
          projectPath: ${{ env.PROJECT_PATH }}
          unityVersion: ${{ env.UNITY_VERSION }}
          targetPlatform: ${{ matrix.targetPlatform }}
          buildMethod: ${{ env.BUILD_METHOD }}
          customParameters: -nographics _name "${{ matrix.package-name }}" _version "${{ env.PKG_VERSION }}" _savePath "."

      - name: Upload package as artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.package-name }}_v${{ env.PKG_VERSION }}.unitypackage
          path: ${{ env.PROJECT_PATH }}/${{ matrix.package-name }}_v${{ env.PKG_VERSION }}.unitypackage
