name: Build

on:
  pull_request: {}
  push: { branches: [main, master, develop] }
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # License
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  # Project
  UNITY_VERSION: 2023.1.0f1
  PROJECT_PATH: .

jobs:
  checklicense:
    name: check if UNITY_LICENSE is set in github secrets
    runs-on: ubuntu-latest
    outputs:
      is_unity_license_set: ${{ steps.checklicense_job.outputs.is_unity_license_set }}
    steps:
      - name: Check whether unity activation requests should be done
        id: checklicense_job
        run: |
            echo "Skip activation job: ${{ env.UNITY_LICENSE != '' }}"
            echo "::set-output name=is_unity_license_set::${{ env.UNITY_LICENSE != '' }}"

  test:
    needs: [checklicense]
    if: needs.checklicense.outputs.is_unity_license_set == 'true'
    name: Test all modes âœ¨
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library-test-project-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-test-project-
            Library-
      - uses: game-ci/unity-test-runner@v3.0.0
        id: testRunner
        with:
          projectPath: ${{ env.PROJECT_PATH }}
          unityVersion: ${{ env.UNITY_VERSION }}
          testMode: all
          customParameters: "-nographics"
      - uses: actions/upload-artifact@v1
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}

  build:
    needs: [checklicense]
    if: needs.checklicense.outputs.is_unity_license_set == 'true'
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64
          - StandaloneLinux64
          - StandaloneOSX
          - Android
          - iOS
          - WebGL
          #- WSAPlayer
          #- PS4
          #- XboxOne
          #- tvOS
          #- Switch
          #- Stadia
          #- CloudRendering
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - uses: actions/cache@v1.1.0
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-

      - uses: game-ci/unity-builder@v2.2.0
        with:
          projectPath: ${{ env.PROJECT_PATH }}
          unityVersion: ${{ env.UNITY_VERSION }}
          targetPlatform: ${{ matrix.targetPlatform }}

      - uses: actions/upload-artifact@v1
        with:
          name: Build
          path: build
